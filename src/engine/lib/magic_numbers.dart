import 'package:fast_immutable_collections/fast_immutable_collections.dart';
import 'engine.dart';

// I just copied these, don't have time to calculate these myself
var rookMagicNumbers = ([
    0x8a80104000800020,
    0x140002000100040,
    0x2801880a0017001,
    0x100081001000420,
    0x200020010080420,
    0x3001c0002010008,
    0x8480008002000100,
    0x2080088004402900,
    0x800098204000,
    0x2024401000200040,
    0x100802000801000,
    0x120800800801000,
    0x208808088000400,
    0x2802200800400,
    0x2200800100020080,
    0x801000060821100,
    0x80044006422000,
    0x100808020004000,
    0x12108a0010204200,
    0x140848010000802,
    0x481828014002800,
    0x8094004002004100,
    0x4010040010010802,
    0x20008806104,
    0x100400080208000,
    0x2040002120081000,
    0x21200680100081,
    0x20100080080080,
    0x2000a00200410,
    0x20080800400,
    0x80088400100102,
    0x80004600042881,
    0x4040008040800020,
    0x440003000200801,
    0x4200011004500,
    0x188020010100100,
    0x14800401802800,
    0x2080040080800200,
    0x124080204001001,
    0x200046502000484,
    0x480400080088020,
    0x1000422010034000,
    0x30200100110040,
    0x100021010009,
    0x2002080100110004,
    0x202008004008002,
    0x20020004010100,
    0x2048440040820001,
    0x101002200408200,
    0x40802000401080,
    0x4008142004410100,
    0x2060820c0120200,
    0x1001004080100,
    0x20c020080040080,
    0x2935610830022400,
    0x44440041009200,
    0x280001040802101,
    0x2100190040002085,
    0x80c0084100102001,
    0x4024081001000421,
    0x20030a0244872,
    0x12001008414402,
    0x2006104900a0804,
    0x1004081002402]);
// var rookMagicNumbers = [
//   5800645253587304448,
//   2287052909445440,
//   146403701280539200,
//   75436463071694864,
//   -8043423436924467200,
//   1116701983234,
//   145258718823489536,
//   7494306576733175808,
//   -4537376585912549376,
//   21533419834966048,
//   -4312125518548795391,
//   2378463554278785188,
//   2748800565280,
//   75435603131641856,
//   9121685903269888,
//   1767702436263302192,
//   1152922054362693704,
//   299067164196865,
//   1480559764776747032,
//   281475044354224,
//   2305843011428297024,
//   7151720606847729668,
//   5782626321940021248,
//   166782721404862628,
//   576460855417376768,
//   1297045497902792704,
//   1153132647883999240,
//   19707921847844928,
//   880713176455301,
//   324752037849007106,
//   1558248219860176900,
//   19140307039879234,
//   1166432372280008704,
//   319133251010560,
//   18016737121341505,
//   4900092591652995072,
//   -9223362965748580348,
//   4615063787974787072,
//   4918528961787461644,
//   4612813091416047656,
//   4617596995094188352,
//   68987944964,
//   -9221119944794570708,
//   1207037285896311846,
//   18014402804514821,
//   13512998173888512,
//   432298122216468,
//   2306556697898160640,
//   140740848019586,
//   72778879035509776,
//   37322097573495308,
//   9013091950006272,
//   -7925205041890164576,
//   -8069323459814873072,
//   6790723399712896,
//   2310346677571043848,
//   563227582791716,
//   6773060618256384,
//   2307110197505556488,
//   9710888881750048,
//   738628585706816008,
//   4611791708984573985,
//   -6916948485459460096,
//   576479447708860544
// ];

var bishopMagicNumbers = ([
0x40040844404084,
    0x2004208a004208,
    0x10190041080202,
    0x108060845042010,
    0x581104180800210,
    0x2112080446200010,
    0x1080820820060210,
    0x3c0808410220200,
    0x4050404440404,
    0x21001420088,
    0x24d0080801082102,
    0x1020a0a020400,
    0x40308200402,
    0x4011002100800,
    0x401484104104005,
    0x801010402020200,
    0x400210c3880100,
    0x404022024108200,
    0x810018200204102,
    0x4002801a02003,
    0x85040820080400,
    0x810102c808880400,
    0xe900410884800,
    0x8002020480840102,
    0x220200865090201,
    0x2010100a02021202,
    0x152048408022401,
    0x20080002081110,
    0x4001001021004000,
    0x800040400a011002,
    0xe4004081011002,
    0x1c004001012080,
    0x8004200962a00220,
    0x8422100208500202,
    0x2000402200300c08,
    0x8646020080080080,
    0x80020a0200100808,
    0x2010004880111000,
    0x623000a080011400,
    0x42008c0340209202,
    0x209188240001000,
    0x400408a884001800,
    0x110400a6080400,
    0x1840060a44020800,
    0x90080104000041,
    0x201011000808101,
    0x1a2208080504f080,
    0x8012020600211212,
    0x500861011240000,
    0x180806108200800,
    0x4000020e01040044,
    0x300000261044000a,
    0x802241102020002,
    0x20906061210001,
    0x5a84841004010310,
    0x4010801011c04,
    0xa010109502200,
    0x4a02012000,
    0x500201010098b028,
    0x8040002811040900,
    0x28000010020204,
    0x6000020202d0240,
    0x8918844842082200,
    0x4010011029020020]);
// var bishopMagicNumbers = [4611703749663011352, 162842113338507264, 4614017120586432528, 146376063159671808, 795465928180498528, 19938311932416, 1193462707061260420, 1765412703198781696, 22522399472228868, 90459125066514560, 2756364050941087744, 4722639957318959104, -9205357225491554746, 5067786552868865, 17626692584448, 149287883507761168, 739013316395925504, -8646761579154487168, 36174276218323046, 5044244926567563264, 36047557446606848, -9223284054449682400, 4670742591539201, 4685150988626100224, 537040384, 39547921456177408, 4611703679368560641, 70373450450944, 288232648194130020, 5772629570641987584, 4614079792684238915, 41850899619877, -8051233813478234816, 363428175541174306, 4503883231535136, 2450142915377234432, 74872360998936832, 5648196065558658, 4509235716555274, 4684306710192455684, 2523713455602008776, 723109783246246208, 2305843031766991360, 10415131410302992, -9133264687817817912, 1801439886450885763, 2346377742355857713, 994002337810433, -9187202498031451520, 1152996563459768384, 246310572671233, 1688867342401538, 144116290838594592, 576464068051800704, 336645180247541760, 4900057159987363904, 2332948172042928640, 36592159427674114, 1169897551959088, 27030462711072793, 1301542491350107264, -9187334439039926234, 8613792032, -9223231140444099584];

int findMagicNumber(int square, int relevantBits, bool isBishop) {
  // [4096], a[4096], used[4096], magic;
  Map<int, int> occupancies = {};
  Map<int, int> attacks = {};
  Map<int, int> usedAttacks = {};
  int i, j, n;

  final mask = isBishop ? maskBishopAttacks(square) : maskRookAttacks(square);
  n = countBits(mask.value);

  for (i = 0; i < (1 << n); i++) {
    occupancies[i] = setOccupancy(i, n, mask).value;
    attacks[i] = (isBishop
            ? genBishopAttacksOnTheFly(square, occupancies[i]!)
            : genRookAttacksOnTheFly(square, occupancies[i]!))
        .value;
  }

  for (var k = 0; k < 100000000; k++) {
    bool fail = false;
    int magicNumber = generateMagicNumber();

    if (countBits((mask.value * magicNumber) & 0xFF00000000000000) < 6)
      continue;

    for (i = 0; i < 4096; i++) usedAttacks[i] = 0;

    print(!fail && i < (1 << n));
    for (var i = 0, fail = false; !fail && i < (1 << n); i++) {
      print("I $i");
      j = (occupancies[i]! * magicNumber) >> (64 - relevantBits);
      if (usedAttacks[j] == 0)
        usedAttacks[j] = attacks[i]!;
      else if (usedAttacks[j] != attacks[i]) fail = true;
    }

    if (!fail) return magicNumber;
  }
  print("***Failed***\n");
  return 0;
}
